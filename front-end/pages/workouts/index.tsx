import Header from "@/components/header";
import Head from "next/head";
import { useEffect, useState } from "react";
import { useTranslation } from "next-i18next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { GetServerSidePropsContext } from "next/types";
import styles from "@/styles/Home.module.css";
import profileStyles from "@/styles/Profile.module.css";
import { User, Workout } from "@/types";
import WorkoutService from "@/services/WorkoutService";
import useSWR, { mutate } from "swr";
import useInterval from "use-interval";
import WorkoutOverview from "@/components/workouts/workoutOverview";

const Workouts: React.FC = () => {
  const { t } = useTranslation();
  const [token, setToken] = useState<string | null>(null);

  const [isLoggedIn, setIsLoggedIn] = useState<boolean | null>(null);
  const [user, setUser] = useState<User | null>(null);
  const [workouts, setWorkouts] = useState<Array<Workout>>([]);
  const [typeColorMap, setTypeColorMap] = useState<Record<string, string>>({});

  const fetchWorkouts = async () => {
    try {
      const response = await WorkoutService.getAllWorkouts();
      const data = await response.json();
      const parsedData = data.map((workout: Workout) => ({
        ...workout,
        date: new Date(workout.date),
      }));
      setWorkouts(parsedData);
    } catch (error) {
      console.error("Failed to fetch workouts:", error);
    }
  };

  useInterval(() => {
    if (token) {
      mutate(["workouts", token]);
    }
  }, 2000);

  useEffect(() => {
    const userData = sessionStorage.getItem("loggedInUser");
    if (userData) {
      try {
        const parsedData = JSON.parse(userData);
        const { email, token } = parsedData;
        setToken(token);
        setIsLoggedIn(!!token);
      } catch (error) {
        console.error("Error parsing session storage data:", error);
        setIsLoggedIn(false);
      }
    } else {
      setIsLoggedIn(false);
    }

    fetchWorkouts();
  }, []);

  return (
    <>
      <Head>
        <title> Workouts </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.flexHeader}>
        <Header />
        <main className={styles.mainWorkouts}>
          {/* <section className={styles.title}>
            <p> Upcoming Workouts </p>
          </section> */}
          <section className={styles.workoutContent}>
            <WorkoutOverview workouts={workouts} />
          </section>
        </main>
      </div>
    </>
  );
};
export default Workouts;
